[{"D:\\AroundProject\\around-web\\src\\index.js":"1","D:\\AroundProject\\around-web\\src\\components\\App.js":"2","D:\\AroundProject\\around-web\\src\\components\\TopBar.js":"3","D:\\AroundProject\\around-web\\src\\constants.js":"4","D:\\AroundProject\\around-web\\src\\components\\Main.js":"5","D:\\AroundProject\\around-web\\src\\components\\Home.js":"6","D:\\AroundProject\\around-web\\src\\components\\Login.js":"7","D:\\AroundProject\\around-web\\src\\components\\Register.js":"8","D:\\AroundProject\\around-web\\src\\components\\SearchBar.js":"9","D:\\AroundProject\\around-web\\src\\components\\PhotoGallery.js":"10","D:\\AroundProject\\around-web\\src\\components\\CreatePostButton.js":"11","D:\\AroundProject\\around-web\\src\\components\\PostForm.js":"12"},{"size":317,"mtime":1608502966280,"results":"13","hashOfConfig":"14"},{"size":827,"mtime":1609278246534,"results":"15","hashOfConfig":"14"},{"size":603,"mtime":1608403926571,"results":"16","hashOfConfig":"14"},{"size":178,"mtime":1608604897806,"results":"17","hashOfConfig":"14"},{"size":1026,"mtime":1609278297801,"results":"18","hashOfConfig":"14"},{"size":4234,"mtime":1609278413416,"results":"19","hashOfConfig":"14"},{"size":2537,"mtime":1609278276290,"results":"20","hashOfConfig":"14"},{"size":3770,"mtime":1609278318068,"results":"21","hashOfConfig":"14"},{"size":1667,"mtime":1609274763749,"results":"22","hashOfConfig":"14"},{"size":1577,"mtime":1609279277186,"results":"23","hashOfConfig":"14"},{"size":3283,"mtime":1611543169734,"results":"24","hashOfConfig":"14"},{"size":1866,"mtime":1609276796219,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8491tz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\AroundProject\\around-web\\src\\index.js",[],["52","53"],"D:\\AroundProject\\around-web\\src\\components\\App.js",[],"D:\\AroundProject\\around-web\\src\\components\\TopBar.js",[],"D:\\AroundProject\\around-web\\src\\constants.js",[],"D:\\AroundProject\\around-web\\src\\components\\Main.js",[],"D:\\AroundProject\\around-web\\src\\components\\Home.js",["54","55"],"import React, { useState, useEffect } from \"react\";\r\nimport { Tabs, message, Row, Col } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport PhotoGallery from \"./PhotoGallery\";\r\nimport CreatePostButton from \"./CreatePostButton\";\r\nimport { SEARCH_KEY, BASE_URL, TOKEN_KEY } from \"../constants\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Home(props) {\r\n    const [posts, setPost] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(\"image\");\r\n    const [searchOption, setSearchOption] = useState({\r\n        type: SEARCH_KEY.all,\r\n        keyword: \"\"\r\n    });\r\n\r\n    const handleSearch = (option) => {\r\n        const { type, keyword } = option;\r\n        setSearchOption({ type: type, keyword: keyword });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const { type, keyword } = searchOption;\r\n        fetchPost(searchOption);\r\n    }, [searchOption]);\r\n\r\n    const fetchPost = (option) => {\r\n        const { type, keyword } = option;\r\n        let url = \"\";\r\n\r\n        if (type === SEARCH_KEY.all) {\r\n            url = `${BASE_URL}/search`;\r\n        } else if (type === SEARCH_KEY.user) {\r\n            url = `${BASE_URL}/search?user=${keyword}`;\r\n        } else {\r\n            url = `${BASE_URL}/search?keywords=${keyword}`;\r\n        }\r\n\r\n        const opt = {\r\n            method: \"GET\",\r\n            url: url,\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\r\n            }\r\n        };\r\n\r\n        axios(opt)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setPost(res.data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Fetch posts failed!\");\r\n                console.log(\"fetch posts failed: \", err.message);\r\n            });\r\n    };\r\n\r\n    const renderPosts = (type) => {\r\n        if (!posts || posts.length === 0) {\r\n            return <div>No data!</div>;\r\n        }\r\n        if (type === \"image\") {\r\n            const imageArr = posts\r\n                .filter((item) => item.type === \"image\")\r\n                .map((image) => {\r\n                    return {\r\n                        src: image.url,\r\n                        user: image.user,\r\n                        caption: image.message,\r\n                        thumbnail: image.url,\r\n                        thumbnailWidth: 300,\r\n                        thumbnailHeight: 200\r\n                    };\r\n                });\r\n\r\n            return <PhotoGallery images={imageArr} />;\r\n        } else if (type === \"video\") {\r\n            return (\r\n                <Row gutter={32}>\r\n                    {posts\r\n                        .filter((post) => post.type === \"video\")\r\n                        .map((post) => (\r\n                            <Col span={8} key={post.url}>\r\n                                <video src={post.url} controls={true} className=\"video-block\" />\r\n                                <p>\r\n                                    {post.user}: {post.message}\r\n                                </p>\r\n                            </Col>\r\n                        ))}\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    const showPost = (type) => {\r\n        console.log(\"type -> \", type);\r\n        setActiveTab(type);\r\n\r\n        setTimeout(() => {\r\n            setSearchOption({ type: SEARCH_KEY.all, keyword: \"\" });\r\n        }, 3000);\r\n    };\r\n\r\n    const operations = <CreatePostButton onShowPost={showPost} />;\r\n    return (\r\n        <div className=\"home\">\r\n            <SearchBar handleSearch={handleSearch} />\r\n            <div className=\"display\">\r\n                <Tabs\r\n                    onChange={(key) => setActiveTab(key)}\r\n                    defaultActiveKey=\"image\"\r\n                    activeKey={activeTab}\r\n                    tabBarExtraContent={operations}\r\n                >\r\n                    <TabPane tab=\"Images\" key=\"image\">\r\n                        {renderPosts(\"image\")}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Videos\" key=\"video\">\r\n                        {renderPosts(\"video\")}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\AroundProject\\around-web\\src\\components\\Login.js",[],"D:\\AroundProject\\around-web\\src\\components\\Register.js",[],"D:\\AroundProject\\around-web\\src\\components\\SearchBar.js",[],"D:\\AroundProject\\around-web\\src\\components\\PhotoGallery.js",[],"D:\\AroundProject\\around-web\\src\\components\\CreatePostButton.js",[],"D:\\AroundProject\\around-web\\src\\components\\PostForm.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":17,"nodeType":"62","messageId":"63","endLine":26,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":26,"column":23,"nodeType":"62","messageId":"63","endLine":26,"endColumn":30},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'type' is assigned a value but never used.","Identifier","unusedVar","'keyword' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]